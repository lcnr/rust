error[E0713]: borrow may still be in use when destructor runs
  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:11:5
   |
LL |     s.url
   |     ^^^^^
LL | }
   | -- borrow later used here
   | |
   | here, drop of `s` needs exclusive access to `*s.url`, because the type `S<'_>` implements the `Drop` trait
   |
   = note: consider using a `let` binding to create a longer lived value

error[E0713]: borrow may still be in use when destructor runs
  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:16:13
   |
LL |     let p = &mut *s.url; p
   |             ^^^^^^^^^^^
LL | }
   | -- borrow later used here
   | |
   | here, drop of `s` needs exclusive access to `*s.url`, because the type `S<'_>` implements the `Drop` trait
   |
   = note: consider using a `let` binding to create a longer lived value

error[E0713]: borrow may still be in use when destructor runs
  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:21:21
   |
LL |     let p: &mut _ = s.url; p
   |                     ^^^^^
LL | }
   | -- borrow later used here
   | |
   | here, drop of `s` needs exclusive access to `*s.url`, because the type `S<'_>` implements the `Drop` trait
   |
   = note: consider using a `let` binding to create a longer lived value

error[E0509]: cannot move out of type `S<'_>`, which implements the `Drop` trait
  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:26:13
   |
LL |     let p = s.url; p
   |             ^^^^^
   |             |
   |             cannot move out of here
   |             move occurs because `s.url` has type `&mut String`, which does not implement the `Copy` trait
   |             help: consider borrowing here: `&s.url`

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0509, E0713.
For more information about an error, try `rustc --explain E0509`.
